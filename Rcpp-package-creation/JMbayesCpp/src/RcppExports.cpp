// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// XbetaZb_cpp
arma::mat XbetaZb_cpp(const arma::mat& X, const arma::vec& beta, const arma::mat& Z, const arma::vec& b);
RcppExport SEXP JMbayesCpp_XbetaZb_cpp(SEXP XSEXP, SEXP betaSEXP, SEXP ZSEXP, SEXP bSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type b(bSEXP);
    rcpp_result_gen = Rcpp::wrap(XbetaZb_cpp(X, beta, Z, b));
    return rcpp_result_gen;
END_RCPP
}
// Xbeta_cpp
arma::mat Xbeta_cpp(const arma::mat& X, const arma::vec& beta);
RcppExport SEXP JMbayesCpp_Xbeta_cpp(SEXP XSEXP, SEXP betaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type beta(betaSEXP);
    rcpp_result_gen = Rcpp::wrap(Xbeta_cpp(X, beta));
    return rcpp_result_gen;
END_RCPP
}
// dnorm_cpp
double dnorm_cpp(const arma::vec& y, const arma::mat& X, const arma::vec& beta, const arma::mat& Z, const arma::vec& b, double sigma);
RcppExport SEXP JMbayesCpp_dnorm_cpp(SEXP ySEXP, SEXP XSEXP, SEXP betaSEXP, SEXP ZSEXP, SEXP bSEXP, SEXP sigmaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type y(ySEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type b(bSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    rcpp_result_gen = Rcpp::wrap(dnorm_cpp(y, X, beta, Z, b, sigma));
    return rcpp_result_gen;
END_RCPP
}
// dmvnorm_cpp
arma::vec dmvnorm_cpp(const arma::mat& x, const arma::rowvec& mean, const arma::mat& sigma, bool logd);
RcppExport SEXP JMbayesCpp_dmvnorm_cpp(SEXP xSEXP, SEXP meanSEXP, SEXP sigmaSEXP, SEXP logdSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec& >::type mean(meanSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< bool >::type logd(logdSEXP);
    rcpp_result_gen = Rcpp::wrap(dmvnorm_cpp(x, mean, sigma, logd));
    return rcpp_result_gen;
END_RCPP
}
// logSurvival_cpp
double logSurvival_cpp(const arma::mat& Xs, const arma::vec& betas_new, const arma::mat& Zs, const arma::vec& b, const arma::vec& alphas_new, const arma::vec& W_time_independent, const arma::vec& gammas_new, const arma::mat& W2s, const arma::vec& Bs_gammas_new, const arma::vec& wk, double P);
RcppExport SEXP JMbayesCpp_logSurvival_cpp(SEXP XsSEXP, SEXP betas_newSEXP, SEXP ZsSEXP, SEXP bSEXP, SEXP alphas_newSEXP, SEXP W_time_independentSEXP, SEXP gammas_newSEXP, SEXP W2sSEXP, SEXP Bs_gammas_newSEXP, SEXP wkSEXP, SEXP PSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type Xs(XsSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type betas_new(betas_newSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Zs(ZsSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type b(bSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type alphas_new(alphas_newSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type W_time_independent(W_time_independentSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type gammas_new(gammas_newSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type W2s(W2sSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type Bs_gammas_new(Bs_gammas_newSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type wk(wkSEXP);
    Rcpp::traits::input_parameter< double >::type P(PSEXP);
    rcpp_result_gen = Rcpp::wrap(logSurvival_cpp(Xs, betas_new, Zs, b, alphas_new, W_time_independent, gammas_new, W2s, Bs_gammas_new, wk, P));
    return rcpp_result_gen;
END_RCPP
}
